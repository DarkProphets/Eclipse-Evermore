/*
 Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package eclipse.screens;

import eclipse.Player_Party;
import eclipse.core;
import static eclipse.screens.Game_Screen.tabbedPane;
import java.awt.Desktop;
import java.io.IOException;
import java.net.URI;
import java.net.URISyntaxException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**

 @author Kealdor
 */
public class character_creation extends javax.swing.JPanel{

    int points;
    int original_points;
    int reset_count;

    int race_id = 0;
    boolean race_selected = false;

    int race_str = -1;
    int race_iq = -1;
    int race_wis = -1;
    int race_con = -1;

    String p_class = "";
    int class_number;

    boolean town = false;

    private void reroll_creation_points(String reason) throws IOException{
        points = core.Dice_Parser("1d20");

        if (points <= original_points){
            output.setText("Retrying reroll because bonus did not increase on reroll");
            reroll_creation_points(reason);
        }

        original_points = points;
        core.log("character creation screen",
                points + " points to spend on character because of " + reason);
    }

    public void reset_stats() throws IOException{
        if (race_selected == true){
            race_selected = false;
            race_id = -86;//no race because null doesn't work here
            race_select.setSelectedIndex(-1);//resets race drop box to show empty line
            core.log("character creation screen - race reset",
                    "screen rendered to show no race selected");

            race_str = 8;
            race_con = 8;
            race_iq = 8;
            race_wis = 8;

            str_val.setText(String.valueOf(race_str));
            vit_val.setText(String.valueOf(race_con));
            iq_val.setText(String.valueOf(race_iq));
            wis_val.setText(String.valueOf(race_wis));
            core.log("character creation screen - stat reset",
                    "screen rendered to show 8 for str, vit, iq, and wisdom");

            points = original_points;
            points_val.setText(String.valueOf(points));
            core.log("character creation screen - point reset",
                    "screen rendered to show points rolled to spend on generated character");

            reset_count++;
            if (reset_count == 3){
                reset_count = 0;
                reroll_creation_points(" System autoreroll from reseting character 1 times");
            }

            output.setText(name_entry.getText() + "s creation has been reset");
        }
    }

    /**
     Creates new form character_creation
     */
    public character_creation() throws IOException{
        core.log("character creation screen",
                "empty character generated");

        core.log("Dice roll - character creation",
                "about to roll for points to spend on character creation");

        points = core.Dice_Parser("1d20");

        while (points == 0){
            reroll_creation_points("rerolling from hitting 0 on initial roll");
        }

        original_points = points;

        core.log("character creation screen",
                points + " points to spend on character just generated");

        initComponents();
        race_select.setSelectedIndex(0);
        class_select.setSelectedIndex(0);

        Game_Screen.party = new Player_Party();

        str_val.setText(String.valueOf(8));
        vit_val.setText(String.valueOf(8));
        iq_val.setText(String.valueOf(8));
        wis_val.setText(String.valueOf(8));
        points_val.setText(String.valueOf(points));
    }

    /**
     This method is called from within the constructor to initialize the form.
     WARNING: Do NOT modify this code. The content of this method is always
     regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name_entry = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        points_val = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        str_val = new javax.swing.JLabel();
        str_d = new javax.swing.JButton();
        str_u = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        vit_val = new javax.swing.JLabel();
        vit_d = new javax.swing.JButton();
        vit_u = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        iq_val = new javax.swing.JLabel();
        iq_d = new javax.swing.JButton();
        iq_u = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        wis_val = new javax.swing.JLabel();
        wis_d = new javax.swing.JButton();
        wis_u = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        reset = new javax.swing.JButton();
        done_btn = new javax.swing.JButton();
        output = new javax.swing.JLabel();
        race_select = new javax.swing.JComboBox<>();
        class_select = new javax.swing.JComboBox<>();
        reroll_btn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        exit_btn = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));

        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Name");

        name_entry.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                name_entryKeyReleased(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Points");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        points_val.setForeground(new java.awt.Color(255, 255, 255));
        points_val.setText("0");
        points_val.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                points_valPropertyChange(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Race");

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Strength");

        str_val.setForeground(new java.awt.Color(255, 255, 255));
        str_val.setText("0");

        str_d.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_down_arrow.png"))); // NOI18N
        str_d.setText("Str");
        str_d.setEnabled(false);
        str_d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                str_dMouseClicked(evt);
            }
        });

        str_u.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_up_arrow.png"))); // NOI18N
        str_u.setText("Str");
        str_u.setEnabled(false);
        str_u.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                str_uMouseClicked(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Vit");

        vit_val.setForeground(new java.awt.Color(255, 255, 255));
        vit_val.setText("0");

        vit_d.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_down_arrow.png"))); // NOI18N
        vit_d.setText("Vit");
        vit_d.setEnabled(false);
        vit_d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vit_dMouseClicked(evt);
            }
        });

        vit_u.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_up_arrow.png"))); // NOI18N
        vit_u.setText("Vit");
        vit_u.setEnabled(false);
        vit_u.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                vit_uMouseClicked(evt);
            }
        });

        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Iq");

        iq_val.setForeground(new java.awt.Color(255, 255, 255));
        iq_val.setText("0");

        iq_d.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_down_arrow.png"))); // NOI18N
        iq_d.setText("Iq");
        iq_d.setToolTipText("");
        iq_d.setEnabled(false);
        iq_d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iq_dMouseClicked(evt);
            }
        });

        iq_u.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_up_arrow.png"))); // NOI18N
        iq_u.setText("Iq");
        iq_u.setEnabled(false);
        iq_u.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                iq_uMouseClicked(evt);
            }
        });

        jLabel7.setForeground(new java.awt.Color(255, 255, 255));
        jLabel7.setText("Wisdom");

        wis_val.setForeground(new java.awt.Color(255, 255, 255));
        wis_val.setText("0");

        wis_d.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_down_arrow.png"))); // NOI18N
        wis_d.setText("Wis");
        wis_d.setEnabled(false);
        wis_d.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wis_dMouseClicked(evt);
            }
        });

        wis_u.setIcon(new javax.swing.ImageIcon(getClass().getResource("/eclipse/stat_up_arrow.png"))); // NOI18N
        wis_u.setText("Wis");
        wis_u.setEnabled(false);
        wis_u.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                wis_uMouseClicked(evt);
            }
        });

        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Class");

        reset.setText("Reset Choices");
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });

        done_btn.setText("Complete");
        done_btn.setEnabled(false);
        done_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                done_btnMouseClicked(evt);
            }
        });

        output.setForeground(new java.awt.Color(255, 255, 255));

        race_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Human", "Elf", "Dwarf", "Halforc", "Halfelf" }));
        race_select.setEnabled(false);
        race_select.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                race_selectMouseEntered(evt);
            }
        });
        race_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                race_selectActionPerformed(evt);
            }
        });

        class_select.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Fighter", "Black Mage", "White Mage", "Red Mage", "Dark Knight", "Paladin" }));
        class_select.setEnabled(false);
        class_select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                class_selectActionPerformed(evt);
            }
        });

        reroll_btn.setText("Reroll Points");
        reroll_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                reroll_btnMouseClicked(evt);
            }
        });

        jTextArea1.setBackground(new java.awt.Color(0, 0, 0));
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jTextArea1.setForeground(new java.awt.Color(0, 0, 255));
        jTextArea1.setRows(5);
        jTextArea1.setText("Enter name\nSelect race \nSpend points\nClick \"Points\" word \nSelect class\n-----------------------------------------------------------\nHuman       8 Str        8 Vit          8 Wis              8 Iq\nElf               8 Str        6 Vit          6 Wis            12 Iq\nDwarf         10 Str     10 Vit         4 Wis              8 Iq\nHalforc       12 Str      8 Vit         6 Wis              6 Iq\nHalfelf        6 Str        6 Vit        10 Wis           10 Iq\n-----------------------------------------------------------\nFighter                            11 Str\nBlack Mage                    11 Iq\nWhite Mage                   11 Wis\nRed Mage                       13 Iq 13 Wis\nDark Knight                   13 Str 13 Iq\nPaladin                           13 Str 13 Wis\n\n-----------------------------------------------------------\nMore races + classes to come in future updates\nJoin our Discord (click this to open link)\n~Kealdor");
        jTextArea1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTextArea1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTextArea1);

        exit_btn.setText("Main menu");
        exit_btn.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exit_btnMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(62, 62, 62))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel4)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(iq_val)
                                    .addComponent(wis_val)
                                    .addComponent(vit_val)
                                    .addComponent(str_val, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addGap(20, 20, 20)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                .addComponent(iq_d, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(vit_d, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(str_d, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(15, 15, 15)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(done_btn)
                                                .addComponent(reset, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(wis_d))))
                            .addComponent(jLabel7)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(99, 99, 99)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel9)
                                    .addComponent(jLabel1))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(class_select, javax.swing.GroupLayout.PREFERRED_SIZE, 162, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(name_entry, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(race_select, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(exit_btn)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(iq_u, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(wis_u, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE)
                                    .addComponent(vit_u, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(str_u, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(reroll_btn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(43, 43, 43)
                        .addComponent(points_val)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(39, 39, 39))
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 451, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(name_entry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(race_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(class_select, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(46, 46, 46)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(str_u)
                            .addComponent(str_d)
                            .addComponent(str_val, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(vit_u)
                            .addComponent(vit_d)
                            .addComponent(vit_val)
                            .addComponent(jLabel5))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(iq_u)
                            .addComponent(iq_d)
                            .addComponent(iq_val)
                            .addComponent(jLabel6))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(wis_d)
                            .addComponent(wis_u)
                            .addComponent(wis_val)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(points_val)
                            .addComponent(jLabel2)
                            .addComponent(reset)
                            .addComponent(reroll_btn))
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(done_btn)
                            .addComponent(exit_btn))
                        .addGap(30, 30, 30))
                    .addComponent(jScrollPane1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(output, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void str_uMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_str_uMouseClicked
        if (points > 0 && str_u.isEnabled()){
            race_str = Integer.parseInt(str_val.getText());
            race_str++;
            str_val.setText(String.valueOf(race_str));

            points--;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - strength",
                        name_entry.getText() + " has had their strength increased by 1"
                        + " giving them a total of " + str_val.getText());
            } catch (IOException ex){
                try{
                    core.log("character creation screen - strength",
                            name_entry.getText() + " has not had their strength increased by 1"
                            + " giving them a total of " + str_val.getText());
                } catch (IOException ex1){
                }
            }
            try{
                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
            }
        }
    }//GEN-LAST:event_str_uMouseClicked

    private void points_valPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_points_valPropertyChange
        if (points > original_points){
            output.setText("Error - attempting to fix");

            int o_race_str = Integer.parseInt(str_val.getText());
            int o_race_con = Integer.parseInt(vit_val.getText());
            int o_race_iq = Integer.parseInt(iq_val.getText());
            int o_race_wis = Integer.parseInt(wis_val.getText());

            switch (race_id){
                case 0://human
                    race_str = 8;
                    race_con = 8;
                    race_iq = 8;
                    race_wis = 8;
                    break;
                case 1://elf
                    race_str = 8;
                    race_con = 6;
                    race_iq = 12;
                    race_wis = 6;
                    break;
                case 2://dwarf
                    race_str = 10;
                    race_con = 10;
                    race_iq = 8;
                    race_wis = 4;
                    break;
                case 3://half-orc
                    race_str = 12;
                    race_con = 8;
                    race_iq = 6;
                    race_wis = 6;
                    break;
                case 4://half-elf
                    race_str = 6;
                    race_con = 6;
                    race_iq = 10;
                    race_wis = 10;
                    break;
            }

            int d_str = o_race_str - race_str;
            int d_con = o_race_con - race_con;
            int d_iq = o_race_iq - race_iq;
            int d_wis = o_race_wis - race_wis;
            int total_spent = d_str + d_con + d_iq + d_wis;

            if (total_spent < points){
                str_val.setText(String.valueOf(o_race_str));
                vit_val.setText(String.valueOf(o_race_con));
                iq_val.setText(String.valueOf(o_race_iq));
                wis_val.setText(String.valueOf(o_race_wis));
                output.setText("Error - fixed");
            } else{
                output.setText("Sorry unable to fix error");

                try{
                    reset_stats();
                } catch (IOException ex){
                    Logger.getLogger(character_creation.class.getName()).log(Level.SEVERE, null, ex);
                }

                output.setText("Your character stats have been reset");
            }
        }

        if (points > 0){
            points_val.setText(String.valueOf(points));
        }

        if (points == 0 && name_entry.getText() != null){
            done_btn.setEnabled(true);
        }
    }//GEN-LAST:event_points_valPropertyChange

    private void done_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_done_btnMouseClicked
        boolean selected = false;

        switch (class_number){
            case 0://Fighter          
                if (Integer.parseInt(str_val.getText()) >= 11){
                    Game_Screen.party.m1.lvl_up_class_choice = 1;
                    selected = true;
                }
                break;
            case 1://Black Mage
                if (Integer.parseInt(iq_val.getText()) >= 11){
                    Game_Screen.party.m1.lvl_up_class_choice = 2;
                    selected = true;
                }
                break;
            case 2://White Mage
                if (Integer.parseInt(wis_val.getText()) >= 11){
                    Game_Screen.party.m1.lvl_up_class_choice = 3;
                    selected = true;
                }
                break;
            case 3://Red Mage
                if (Integer.parseInt(iq_val.getText()) >= 13 && Integer.parseInt(wis_val.getText()) >= 13){
                    Game_Screen.party.m1.lvl_up_class_choice = 4;
                    selected = true;
                }
                break;
            case 4://Dark Knight
                if (Integer.parseInt(iq_val.getText()) >= 13 && Integer.parseInt(str_val.getText()) >= 13){
                    Game_Screen.party.m1.lvl_up_class_choice = 5;
                    selected = true;
                }
                break;
            case 5://Paladin
                if (Integer.parseInt(str_val.getText()) >= 13 && Integer.parseInt(wis_val.getText()) >= 13){
                    Game_Screen.party.m1.lvl_up_class_choice = 6;
                    selected = true;
                }
                break;
        }

        if (points == 0){
            if (Integer.parseInt(str_val.getText()) < 11 && Integer.parseInt(iq_val.getText()) < 11 && Integer.parseInt(wis_val.getText()) < 11){
                output.setText(name_entry.getText() + " doesn't meet requirements of any class [Fix or Reset]");
                reset_count++;
            }

            if (reset_count == 3){
                try{
                    reset_count = 0;
                    reroll_creation_points("system automatic reroll from reset count");
                } catch (IOException ex){
                    try{
                        core.log("creation screen - points", "system automatic reroll from reset count failed");
                    } catch (IOException ex1){
                    }
                }
            }
        }

        if (selected == true){
            Game_Screen.party.m1.new_character = true;
            Game_Screen.party.m1.name = name_entry.getText();

            try{
                Game_Screen.party.m1.set_str(Integer.parseInt(str_val.getText()));
                Game_Screen.party.m1.set_con(Integer.parseInt(vit_val.getText()));
                Game_Screen.party.m1.set_iq(Integer.parseInt(iq_val.getText()));
                Game_Screen.party.m1.set_wis(Integer.parseInt(wis_val.getText()));
                Game_Screen.party.m1.item.equipt_weapon = 0;
                Game_Screen.party.m1.item.equipt_weapon2 = 0;

                Game_Screen.party.m1.race = race_id;//saves selected race
                Game_Screen.party.m1.last_location = 1;//starter town

                Game_Screen.party.m1.set_class_choice(p_class);

                Game_Screen.party.m1.level_up(Game_Screen.party.m1);
            } catch (IOException ex){
                try{
                    core.log("new character screen", "player creation failed");
                } catch (IOException ex1){
                }
            }

            if (town == false){
                JPanel antioch_screen = new Antioch_town();
                if (Game_Screen.tab <= 1){

                    Game_Screen.tabbedPane.removeTabAt(0);
                    Game_Screen.tabbedPane.removeTabAt(0);
                    Game_Screen.tabbedPane.insertTab("Antioch", null, antioch_screen, null, 0);
                    Game_Screen.tabbedPane.setSelectedIndex(1);
                }
                if (Game_Screen.tab > 1){

                    Game_Screen.tabbedPane.removeTabAt(0);
                    Game_Screen.tabbedPane.removeTabAt(1);
                    Game_Screen.tabbedPane.insertTab("Antioch", null, antioch_screen, null, 0);
                    Game_Screen.tabbedPane.setSelectedIndex(0);
                }
                town = true;
            }

        }
    }//GEN-LAST:event_done_btnMouseClicked

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        try{
            reset_stats();
        } catch (IOException ex){
            try{
                core.log("new character screen", "reseting gui and player stat variables failed");
            } catch (IOException ex1){
            }
        }
    }//GEN-LAST:event_resetMouseClicked

    private void str_dMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_str_dMouseClicked
        int x;

        if (Integer.parseInt(str_val.getText()) > race_str && str_d.isEnabled()){
            x = Integer.parseInt(str_val.getText());
            x = x - 1;
            str_val.setText(String.valueOf(x));

            points++;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - strength",
                        name_entry.getText() + " has had their strength decreased by 1"
                        + " giving them a total of " + str_val.getText());

                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
                Logger.getLogger(character_creation.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try{
                core.log("character creation screen - strength",
                        name_entry.getText() + " can not have their strength decreased by 1"
                        + " giving them a total of " + str_val.getText());
            } catch (IOException ex){
                Logger.getLogger(character_creation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_str_dMouseClicked

    private void vit_dMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vit_dMouseClicked
        int x;

        if (Integer.parseInt(vit_val.getText()) > race_con && vit_d.isEnabled()){
            x = Integer.parseInt(vit_val.getText());
            x = x - 1;
            vit_val.setText(String.valueOf(x));

            points++;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - vitality",
                        name_entry.getText() + " has had their vitality decreased by 1"
                        + " giving them a total of " + vit_val.getText());

                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
                Logger.getLogger(character_creation.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else{
            try{
                core.log("character creation screen - vitality",
                        name_entry.getText() + " can not have their vitalty decreased by 1"
                        + " giving them a total of " + vit_val.getText());
            } catch (IOException ex){
                Logger.getLogger(character_creation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_vit_dMouseClicked

    private void iq_dMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iq_dMouseClicked
        int x;

        if (Integer.parseInt(iq_val.getText()) > race_iq && iq_d.isEnabled()){
            x = Integer.parseInt(iq_val.getText());
            x = x - 1;
            iq_val.setText(String.valueOf(x));

            points++;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - iq",
                        name_entry.getText() + " has had their iq decreased by 1"
                        + " giving them a total of " + iq_val.getText());

                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
                try{
                    core.log("character creation screen - iq",
                            name_entry.getText() + " has not had their iq decreased by 1"
                            + " giving them a total of " + iq_val.getText());
                } catch (IOException ex1){
                }
            }
        } else{
            try{
                core.log("character creation screen - iq",
                        name_entry.getText() + " can not have their iq decreased by 1"
                        + " giving them a total of " + iq_val.getText());
            } catch (IOException ex){
            }
        }
    }//GEN-LAST:event_iq_dMouseClicked

    private void wis_dMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wis_dMouseClicked
        int x;

        if (Integer.parseInt(wis_val.getText()) > race_wis && wis_d.isEnabled()){
            x = Integer.parseInt(wis_val.getText());
            x = x - 1;
            wis_val.setText(String.valueOf(x));

            points++;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - wisdom",
                        name_entry.getText() + " has had their wisdom decreased by 1"
                        + " giving them a total of " + wis_val.getText());

                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
                try{
                    core.log("character creation screen - wisdom",
                            name_entry.getText() + " has not  had their wisdom decreased by 1"
                            + " giving them a total of " + wis_val.getText());
                } catch (IOException ex1){
                }
            }
        } else{
            try{
                core.log("character creation screen - wisdom",
                        name_entry.getText() + " can not have their wisdom decreased by 1"
                        + " giving them a total of " + wis_val.getText());
            } catch (IOException ex){
                Logger.getLogger(character_creation.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_wis_dMouseClicked

    private void vit_uMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_vit_uMouseClicked
        if (points > 0 && vit_u.isEnabled()){
            race_con = Integer.parseInt(vit_val.getText());
            race_con++;
            vit_val.setText(String.valueOf(race_con));

            points--;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - vitality",
                        name_entry.getText() + " has had their vitality increased by 1"
                        + " giving them a total of " + vit_val.getText());

                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
                try{
                    core.log("character creation screen - vitality",
                            name_entry.getText() + " has not had their vitality increased by 1"
                            + " giving them a total of " + vit_val.getText());
                } catch (IOException ex1){
                }
            }
        }
    }//GEN-LAST:event_vit_uMouseClicked

    private void iq_uMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_iq_uMouseClicked
        if (points > 0 && iq_u.isEnabled()){
            race_iq = Integer.parseInt(iq_val.getText());
            race_iq++;
            iq_val.setText(String.valueOf(race_iq));

            points--;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - iq",
                        name_entry.getText() + " has had their iq increased by 1"
                        + " giving them a total of " + iq_val.getText());

                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
                try{
                    core.log("character creation screen - iq",
                            name_entry.getText() + " has not had their iq increased by 1"
                            + " giving them a total of " + iq_val.getText());
                } catch (IOException ex1){
                }
            }
        }
    }//GEN-LAST:event_iq_uMouseClicked

    private void wis_uMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_wis_uMouseClicked
        if (points > 0 && wis_u.isEnabled()){
            race_wis = Integer.parseInt(wis_val.getText());
            race_wis++;
            wis_val.setText(String.valueOf(race_wis));

            points--;
            points_val.setText(String.valueOf(points));

            try{
                core.log("character creation screen - wisdom",
                        name_entry.getText() + " has had their wisdom increased by 1"
                        + " giving them a total of " + wis_val.getText());

                core.log("character creation screen - points",
                        name_entry.getText() + " has " + points_val.getText()
                        + " points remaining to spend");
            } catch (IOException ex){
                try{
                    core.log("character creation screen - wisdom",
                            name_entry.getText() + " has not had their wisdom increased by 1"
                            + " giving them a total of " + wis_val.getText());
                } catch (IOException ex1){
                }
            }
        }
    }//GEN-LAST:event_wis_uMouseClicked

    private void reroll_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_reroll_btnMouseClicked
        if (race_selected == true){
            race_selected = false;
            race_id = -86;//no race because null doesn't work here
            race_select.setSelectedIndex(-1);//resets race drop box to show empty line
            try{
                core.log("character creation screen - race reset",
                        "screen rendered to show no race selected");
            } catch (IOException ex){
                try{
                    core.log("character creation screen - race reset",
                            "screen not rendered to show no race selected");
                } catch (IOException ex1){
                }
            }

            race_str = 8;
            race_con = 8;
            race_iq = 8;
            race_wis = 8;

            str_val.setText(String.valueOf(race_str));
            vit_val.setText(String.valueOf(race_con));
            iq_val.setText(String.valueOf(race_iq));
            wis_val.setText(String.valueOf(race_wis));

            try{
                core.log("character creation screen - stat reset",
                        "screen rendered to show 8 for str, vit, iq, and wisdom");

                reroll_creation_points("User reroll for creation of " + name_entry.getText());
            } catch (IOException ex){
                try{
                    core.log("character creation screen - stat reset",
                            "screen not rendered to show 8 for str, vit, iq, and wisdom");
                } catch (IOException ex1){
                }
            }
            str_u.setEnabled(false);
            str_d.setEnabled(false);
            vit_u.setEnabled(false);
            vit_d.setEnabled(false);
            wis_u.setEnabled(false);
            wis_d.setEnabled(false);
            iq_u.setEnabled(false);
            iq_d.setEnabled(false);
        }
    }//GEN-LAST:event_reroll_btnMouseClicked

    private void exit_btnMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exit_btnMouseClicked
        String tab_name = null;
        int screen_number = 0;

        try{
            core.log("new character screen", "looking for title screen to render it");
        } catch (IOException ex){
        }
        while (!"Title".equals(tab_name)){
            tab_name = tabbedPane.getTitleAt(screen_number);
            screen_number++;
        }

        if ("Title".equals(tab_name)){
            int this_tab = tabbedPane.getSelectedIndex();
            title_screen.newgame = false;
            try{
                core.log("new character screen", "title screen found displaying it now");
            } catch (IOException ex){
            }
            tabbedPane.setSelectedIndex(screen_number);
            Game_Screen.tab--;
            try{
                core.log("new character screen", "closing new character screen now");
            } catch (IOException ex){
            }
            tabbedPane.removeTabAt(this_tab);
        }
    }//GEN-LAST:event_exit_btnMouseClicked

    private void jTextArea1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTextArea1MouseClicked
        URI uri = null;
        try{
            uri = new URI("https://www.discord.com/invite/dcY3D9U6Tt");
        } catch (URISyntaxException ex){
            Logger.getLogger(character_creation.class.getName()).log(Level.SEVERE, null, ex);
        }
        try{
            Desktop.getDesktop().browse(uri);
        } catch (Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jTextArea1MouseClicked

    private void class_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_class_selectActionPerformed
        class_number = class_select.getSelectedIndex();

        switch (class_number){
            case 0:
                p_class = "Fighter";
                //output.setText(p_class + " : 11 Strength");
                break;
            case 1:
                p_class = "Black Mage";
                //output.setText(p_class + " : 11 IQ");
                break;
            case 2:
                p_class = "White Mage";
                //output.setText(p_class + " : 11 Wisdom");
                break;
            case 3:
                p_class = "Red Mage";
                //output.setText(p_class + " : 13 IQ + 13 Wisdom");
                break;
            case 4:
                p_class = "Dark Knight";
                //output.setText(p_class + " : 13 Strength + 13 IQ");
                break;
            case 5:
                p_class = "Paladin";
                //output.setText(p_class + " : 13 Strength + 13 Wisdom");
                break;
        }

        output.setText(p_class + " is currently selected");
        done_btn.setEnabled(true);
    }//GEN-LAST:event_class_selectActionPerformed

    private void name_entryKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name_entryKeyReleased
        if (name_entry.getText().length() > 0){
            race_select.setEnabled(true);
        }
    }//GEN-LAST:event_name_entryKeyReleased

    private void race_selectMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_race_selectMouseReleased

    }//GEN-LAST:event_race_selectMouseReleased

    private void race_selectMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_race_selectMouseEntered
        race_select.setEnabled(true);

        if (race_selected == true){
            race_selected = false;
            race_str = 8;
            race_con = 8;
            race_iq = 8;
            race_wis = 8;
            race_id = 0;
            points = original_points;
            str_val.setText(String.valueOf(race_str));
            vit_val.setText(String.valueOf(race_con));
            wis_val.setText(String.valueOf(race_wis));
            iq_val.setText(String.valueOf(race_iq));
            points_val.setText(String.valueOf(points));
        }
    }//GEN-LAST:event_race_selectMouseEntered

    private void race_selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_race_selectActionPerformed
        if (race_selected == false){
            int x = 0;
            race_id = race_select.getSelectedIndex();

            switch (race_id){
                case 0://human
                    vit_val.setText(String.valueOf(8));
                    str_val.setText(String.valueOf(8));
                    iq_val.setText(String.valueOf(8));
                    wis_val.setText(String.valueOf(8));
                    try{
                        core.log("character creation screen - Race selection",
                                "screen rendered for Human race");
                    } catch (IOException ex){
                        try{
                            core.log("character creation screen - Race selection",
                                    "screen not rendered for Human race");
                        } catch (IOException ex1){
                        }
                    }
                    break;

                case 1://elf
                    x = Integer.parseInt(vit_val.getText());
                    x = x - 2;
                    vit_val.setText(String.valueOf(x));

                    x = Integer.parseInt(wis_val.getText());
                    x = x - 2;
                    wis_val.setText(String.valueOf(x));

                    x = Integer.parseInt(iq_val.getText());
                    x = x + 4;
                    iq_val.setText(String.valueOf(x));

                    try{
                        core.log("character creation screen - Race selection",
                                "screen rendered to show stat changes for Elf race");
                    } catch (IOException ex){
                        try{
                            core.log("character creation screen - Race selection",
                                    "screen not rendered to show stat changes for Elf race");
                        } catch (IOException ex1){
                        }
                    }
                    break;

                case 2://Dwarf
                    x = Integer.parseInt(vit_val.getText());
                    x = x + 2;
                    vit_val.setText(String.valueOf(x));

                    x = Integer.parseInt(wis_val.getText());
                    x = x - 4;
                    wis_val.setText(String.valueOf(x));
                    x = Integer.parseInt(str_val.getText());
                    x = x + 2;
                    str_val.setText(String.valueOf(x));

                    try{
                        core.log("character creation screen - Race selection",
                                "screen rendered to show stat changes for Dwarf race");
                    } catch (IOException ex){
                        try{
                            core.log("character creation screen - Race selection",
                                    "screen not rendered to show stat changes for Dwarf race");
                        } catch (IOException ex1){
                        }
                    }
                    break;

                case 3://Half-orc
                    x = Integer.parseInt(str_val.getText());
                    x = x + 4;
                    str_val.setText(String.valueOf(x));

                    x = Integer.parseInt(wis_val.getText());
                    x = x - 2;
                    wis_val.setText(String.valueOf(x));

                    x = Integer.parseInt(iq_val.getText());
                    x = x - 2;
                    iq_val.setText(String.valueOf(x));

                    try{
                        core.log("character creation screen - Race selection",
                                "screen rendered to show stat changes for Half-orc race");
                    } catch (IOException ex){
                        try{
                            core.log("character creation screen - Race selection",
                                    "screen not rendered to show stat changes for Half-orc race");
                        } catch (IOException ex1){
                        }
                    }
                    break;

                case 4://Half-elf
                    x = Integer.parseInt(vit_val.getText());
                    x = x - 2;
                    vit_val.setText(String.valueOf(x));

                    x = Integer.parseInt(str_val.getText());
                    x = x - 2;
                    str_val.setText(String.valueOf(x));

                    x = Integer.parseInt(iq_val.getText());
                    x = x + 2;
                    iq_val.setText(String.valueOf(x));

                    x = Integer.parseInt(wis_val.getText());
                    x = x + 2;
                    wis_val.setText(String.valueOf(x));

                    try{
                        core.log("character creation screen - Race selection",
                                "screen rendered to show stat changes for Half-elf race");
                    } catch (IOException ex){
                        try{
                            core.log("character creation screen - Race selection",
                                    "screen not rendered to show stat changes for Half-elf race");
                        } catch (IOException ex1){
                        }
                    }
                    break;
            }

            String name = null;
            String race = null;

            try{

                name = name_entry.getText();
                race = race_select.getSelectedItem().toString();
                core.log("character creation screen - Race selection",
                        name + " has had their race selected as " + race);
            } catch (IOException ex){
                try{
                    core.log("character creation screen - Race selection",
                            name + " has not had their race selected as " + race);
                } catch (IOException ex1){
                }
            }

            race_str = Integer.parseInt(str_val.getText());
            race_con = Integer.parseInt(vit_val.getText());
            race_iq = Integer.parseInt(iq_val.getText());
            race_wis = Integer.parseInt(wis_val.getText());
            race_selected = true;

            str_u.setEnabled(true);
            str_d.setEnabled(true);
            vit_u.setEnabled(true);
            vit_d.setEnabled(true);
            wis_u.setEnabled(true);
            wis_d.setEnabled(true);
            iq_u.setEnabled(true);
            iq_d.setEnabled(true);
            race_select.setEnabled(false);
        }
    }//GEN-LAST:event_race_selectActionPerformed

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        class_select.setEnabled(true);
    }//GEN-LAST:event_jLabel2MouseClicked

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> class_select;
    private javax.swing.JButton done_btn;
    private javax.swing.JButton exit_btn;
    private javax.swing.JButton iq_d;
    private javax.swing.JButton iq_u;
    private javax.swing.JLabel iq_val;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField name_entry;
    private javax.swing.JLabel output;
    private javax.swing.JLabel points_val;
    private javax.swing.JComboBox<String> race_select;
    private javax.swing.JButton reroll_btn;
    private javax.swing.JButton reset;
    private javax.swing.JButton str_d;
    private javax.swing.JButton str_u;
    private javax.swing.JLabel str_val;
    private javax.swing.JButton vit_d;
    private javax.swing.JButton vit_u;
    private javax.swing.JLabel vit_val;
    private javax.swing.JButton wis_d;
    private javax.swing.JButton wis_u;
    private javax.swing.JLabel wis_val;
    // End of variables declaration//GEN-END:variables

}
